<html>
<body>

output <br>
<textarea rows="5" cols="100" id="result" onkeypress="onInput(event)"></textarea>

<script src="https://api.jdoodle.com/js/sockjs.js"></script>
<script src="https://api.jdoodle.com/js/webstomp.js"></script>
<p><%= requestData %></p>


<script>
//   const clientId = 'your_client_id';
// const clientSecret = 'your_client_secret';

// const response = fetch('https://api.jdoodle.com/v1/auth-token', {
//     method: 'POST',
//     headers: {
//         'Content-Type': 'application/json'
//     },
//     body: JSON.stringify({ clientId, clientSecret })
// });

// const data = response.json();
// const authToken = data.token; // Extract the authentication token from the response
//auth ends
let socketClient = webstomp.over(new SockJS('https://api.jdoodle.com/v1/stomp'), { heartbeat: false, debug: true })

function onWsConnection() {
  console.log('connection succeeded')

  socketClient.subscribe('/user/queue/execute-i', (message) => {
        let msgId = message.headers['message-id']
        let msgSeq = parseInt(msgId.substring(msgId.lastIndexOf('-') + 1))

        let statusCode = parseInt(message.headers.statusCode)

        if (statusCode === 201) {
          this.wsNextId = msgSeq + 1
          return
        }

        let t0
        try {
          t0 = performance.now()
          while ((performance.now() - t0) < 2500 && this.wsNextId !== msgSeq) {

          }
        } catch (e) {

        }

        if (statusCode === 204) {
          //executionTime = message.body
        } else if (statusCode === 500 || statusCode === 410) {
          //server error
          console.log("server error");
        } else if (statusCode === 206) {
          //outputFiles = JSON.parse(message.body)
          //returns file list - not supported in this custom api
        } else if (statusCode === 429) {
          //Daily limit reached
          console.log("daily limit reached");
        } else if (statusCode === 400) {
          //Invalid request - invalid signature or token expired - check the body for details
          console.log("invalid request - invalid signature or token expired");
        } else if (statusCode === 401) {
          //Unauthorised request
          console.log("Unauthorised request");
        } else {
          var txt = document.getElementById("result").value
          document.getElementById("result").value = txt + message.body
        }

        this.wsNextId = msgSeq + 1
    })

    let script =  ` import java.util.Scanner;
 import java.util.NoSuchElementException;

public class MyClass {
 public static void main(String args[]) {
		Scanner scanner = new Scanner(System.in);

		try {
		 System.out.println("Type a Line and enter....");
		String txt = scanner.nextLine();
		System.out.println("You have typed...");
		System.out.println(txt);
		} catch (NoSuchElementException e) {
		    System.out.println("Type something in the Stdin box above....");
		}

	}
}`;

    let data = JSON.stringify({
            script: script,
            language: "java",
            versionIndex: 4
          })

    socketClient.send('/app/execute-ws-api-token', data, { message_type: 'execute', token: authToken })
}

function onWsConnectionFailed(e) {
  console.log('connection failed')
  console.log(e)
}

function onInput(e) {
  let key = event.key
  if (event.key === 'Enter') {
    key = '\n'
  }
  socketClient.send('/app/execute-ws-api-token', key, { message_type: 'input' })

}

socketClient.connect({}, onWsConnection, onWsConnectionFailed)
</script>